import javax.swing.JOptionPane;

public class Cola {
    private NodoCola primerNodo;
    private NodoCola ultimoNodo;
    private int limite, n;

    public Cola(int n) {
        this.n = n;
        limite = n - 1;
        primerNodo = null;
        ultimoNodo = null;
    }

    public int getLimite() {
        return limite;
    }

    public void setLimite(int limite) {
        this.limite = limite;
    }

    public int getN() {
        return n;
    }

    public void setN(int n) {
        this.n = n;
    }

    public boolean colaVacia() {
        return primerNodo == null;
    }

    public void encolar(int d) {
        if (!colaLlena()) {
            NodoCola nuevoNodo = new NodoCola(d);
            if (colaVacia()) {
                primerNodo = nuevoNodo;
                ultimoNodo = nuevoNodo;
            } else {
                ultimoNodo.setSiguiente(nuevoNodo);
                ultimoNodo = nuevoNodo;
            }
        } else {
            System.out.println("La cola está llena");
        }
    }

    public int desencolar() {
        if (!colaVacia()) {
            int r = primerNodo.getDato();
            if (primerNodo == ultimoNodo) {
                primerNodo = null;
                ultimoNodo = null;
            } else {
                primerNodo = primerNodo.getSiguiente();
            }
            return r;
        } else {
            return -1; // Valor sentinela para indicar que la cola está vacía
        }
    }

    public boolean colaLlena() {
        int contador = 0;
        NodoCola nodoActual = primerNodo;
        while (nodoActual != null) {
            contador++;
            nodoActual = nodoActual.getSiguiente();
        }
        return contador == limite + 1;
    }

    public void llenarCola(Cola C1) {
        while (!C1.colaVacia() && !colaLlena()) {
            encolar(C1.desencolar());
        }
    }

    public void ordenarAsc() {
        Cola CA = new Cola(n);
        Cola CA2 = new Cola(n);
        int aux = 0;

        CA.llenarCola(this);
        aux = CA.desencolar();

        while (!CA.colaVacia()) {
            if (aux > CA.primerNodo.getDato()) {
                CA2.encolar(aux);
                aux = CA.desencolar();
            } else {
                CA2.encolar(CA.desencolar());
            }
        }

        encolar(aux);
        CA.encolar(CA2.desencolar());
        llenarCola(CA);
    }

    public void ordenarDes() {
        Cola CD = new Cola(n);
        Cola CD2 = new Cola(n);
        int aux = 0;

        CD.llenarCola(this);
        aux = CD.desencolar();

        while (!CD.colaVacia()) {
            if (aux < CD.primerNodo.getDato()) {
                CD2.encolar(aux);
                aux = CD.desencolar();
            } else {
                CD2.encolar(CD.desencolar());
            }
        }

        encolar(aux);
        CD.encolar(CD2.desencolar());
        llenarCola(CD);
    }

    public void encolar
